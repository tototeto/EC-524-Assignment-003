"0","mod_b <- boost_tree("
"0","  mode = ""classification"","
"0","  engine = ""xgboost"","
"0","  mtry = tune(),"
"0","  trees = tune(),"
"0","  min_n = tune(),"
"0","  learn_rate = tune(),"
"0","  tree_depth = tune(),"
"0",")"
"0",""
"0","rec_b <- recipe(penguins, species ~island + sex + bill_length_mm  + body_mass_g) %>% "
"0","  step_impute_bag(all_numeric(), all_factor()) %>% "
"0","  update_role(species, new_role = ""outcome"") %>% "
"0","  step_dummy(all_factor_predictors())"
"0",""
"0","# Define parameter ranges"
"0","mtry_b = seq(from = 1, to = ncol(penguins), length.out = ncol(penguins))"
"0","trees_b = floor(10^seq(from = 0, to = 3, by = 0.5))"
"0","min_n_b = seq(from = 1, to = 10, by = 2)"
"0","learn_rate_b = (10^seq(from = -4, to = 0, by = 0.5))"
"0","tree_depth_b = seq(from=1,to=10,by=1)"
"0",""
"0","wkfl_b <-workflow() %>% "
"0","  add_model(mod_b) %>% "
"0","  add_recipe(rec_b)"
"0",""
"0","cl <- makeCluster(detectCores() - 1)"
"0","registerDoParallel(cl)"
"0",""
"0","tgrid_b <- expand_grid("
"0","      mtry = mtry_b,"
"0","      trees = trees_b,"
"0","      min_n = min_n_b,"
"0","      learn_rate = learn_rate_b,"
"0","      tree_depth = tree_depth_b)"
"0",""
"0","cv_b <- wkfl_b %>% "
"0","  tune_grid("
"0","    peng_cv_f,"
"0","    grid = tgrid_b,"
"0","    metrics = metric_set(accuracy),"
"0","    control = control_grid(save_pred = TRUE, verbose = TRUE, parallel_over = ""everything"") # Parellel"
"0","  )"
